{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/Service/employee.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction AddEmpComponent_button_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AddEmpComponent_button_21_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.update());\n    });\n    i0.ɵɵtext(1, \"update\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEmpComponent_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AddEmpComponent_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSubmit());\n    });\n    i0.ɵɵtext(1, \"Submit\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AddEmpComponent {\n  constructor(fb, serv, route, routes) {\n    this.fb = fb;\n    this.serv = serv;\n    this.route = route;\n    this.routes = routes;\n    this.isUpdate = false;\n  }\n  ngOnInit() {\n    this.formLoad();\n    this.routes.queryParams.subscribe(params => {\n      this.userId = params.id;\n      debugger;\n    });\n    if (this.userId) {\n      this.isUpdate = true;\n      this.getUserbyId(this.userId);\n    }\n  }\n  onSubmit() {\n    const data = {\n      empId: 0,\n      name: this.UserForm.value.Name,\n      phoneNumber: this.UserForm.value.PhoneNumber,\n      email: this.UserForm.value.Email,\n      department: this.UserForm.value.Department,\n      designation: this.UserForm.value.Designation\n    };\n    console.log(data);\n    this.serv.createEmployee(data).subscribe(res => {\n      console.log(res);\n      if (res.data == true) {\n        this.route.navigate(['']);\n      }\n    });\n  }\n  formLoad() {\n    return this.UserForm = this.fb.group({\n      Name: [''],\n      PhoneNumber: [''],\n      Email: [''],\n      Department: [''],\n      Designation: ['']\n    });\n  }\n  onBack() {\n    this.route.navigate(['']);\n  }\n  getUserbyId(id) {\n    debugger;\n    this.serv.employeeDetailById(Number(id)).subscribe(res => {\n      if (res) {\n        res.data;\n        this.UserForm.patchValue({\n          Name: res.data.name,\n          PhoneNumber: res.data.phoneNumber,\n          Email: res.data.email,\n          Department: res.data.department,\n          Designation: res.data.designation\n        });\n      }\n      debugger;\n      console.log(res);\n    });\n  }\n  update() {\n    const userData = {\n      empId: 0,\n      name: this.UserForm.value.Name,\n      phoneNumber: this.UserForm.value.PhoneNumber,\n      email: this.UserForm.value.Email,\n      department: this.UserForm.value.Department,\n      designation: this.UserForm.value.Designation\n    };\n    this.serv.updateEmployee(userData);\n  }\n}\n_class = AddEmpComponent;\n_class.ɵfac = function AddEmpComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-add-emp\"]],\n  decls: 27,\n  vars: 3,\n  consts: [[1, \"card\", \"p-2\"], [1, \"card-body\"], [3, \"formGroup\"], [\"formControlName\", \"Name\", \"placeholder\", \"Enter your Name\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"PhoneNumber\", \"placeholder\", \"Enter your phoneNumber\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"Email\", \"placeholder\", \"Enter your Email\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"Department\", \"placeholder\", \"Enter your Department\", \"type\", \"text\", 1, \"form-control\"], [\"formControlName\", \"Designation\", \"placeholder\", \"Enter your Designation\", \"type\", \"text\", 1, \"form-control\"], [\"class\", \"btn btn-primary\", 3, \"click\", 4, \"ngIf\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function AddEmpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"Employee Form\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"form\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 3);\n      i0.ɵɵelementStart(8, \"label\");\n      i0.ɵɵtext(9, \"PhoneNumber:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"input\", 4);\n      i0.ɵɵelementStart(11, \"label\");\n      i0.ɵɵtext(12, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"input\", 5);\n      i0.ɵɵelementStart(14, \"label\");\n      i0.ɵɵtext(15, \"Department:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(16, \"input\", 6);\n      i0.ɵɵelementStart(17, \"label\");\n      i0.ɵɵtext(18, \"Designation:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 7)(20, \"br\");\n      i0.ɵɵtemplate(21, AddEmpComponent_button_21_Template, 2, 0, \"button\", 8);\n      i0.ɵɵtext(22, \"\\u00A0 \");\n      i0.ɵɵtemplate(23, AddEmpComponent_button_23_Template, 2, 0, \"button\", 8);\n      i0.ɵɵtext(24, \"\\u00A0 \");\n      i0.ɵɵelementStart(25, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function AddEmpComponent_Template_button_click_25_listener() {\n        return ctx.onBack();\n      });\n      i0.ɵɵtext(26, \"Back\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formGroup\", ctx.UserForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngIf\", ctx.isUpdate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isUpdate);\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","AddEmpComponent","constructor","fb","serv","route","routes","ngOnInit","formLoad","queryParams","subscribe","params","userId","id","isUpdate","getUserbyId","onSubmit","data","empId","name","UserForm","value","Name","phoneNumber","PhoneNumber","email","Email","department","Department","designation","Designation","console","log","createEmployee","res","navigate","group","onBack","employeeDetailById","Number","patchValue","update","userData","updateEmployee","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["F:\\MachineTest\\EmployeeUI\\EmployeeUI\\src\\app\\Component\\add-emp\\add-emp.component.html","F:\\MachineTest\\EmployeeUI\\EmployeeUI\\src\\app\\Component\\add-emp\\add-emp.component.ts"],"sourcesContent":["<p>Employee Form</p>\n<div class=\"card p-2\">\n   <div class=\"card-body\">\n    <form [formGroup]=\"UserForm\">\n        <label>Name:</label>\n        <input class=\"form-control\"   formControlName=\"Name\" placeholder=\"Enter your Name\" type=\"text\"> \n        <label>PhoneNumber:</label>\n        <input class=\"form-control\" formControlName=\"PhoneNumber\"  placeholder=\"Enter your phoneNumber\" type=\"text\">\n        <label>Email:</label>\n        <input class=\"form-control\" formControlName=\"Email\"  placeholder=\"Enter your Email\" type=\"text\">\n        <label>Department:</label>\n        <input class=\"form-control\" formControlName=\"Department\"  placeholder=\"Enter your Department\" type=\"text\">\n        <label>Designation:</label>\n        <input class=\"form-control\" formControlName=\"Designation\"  placeholder=\"Enter your Designation\" type=\"text\">\n        <br>\n        <button class=\"btn btn-primary\" *ngIf=\"isUpdate\" (click)=\"update()\">update</button>&nbsp;\n        <button class=\"btn btn-primary\" *ngIf=\"!isUpdate\" (click)=\"onSubmit()\">Submit</button>&nbsp;\n        <button class=\"btn btn-success\" (click)=\"onBack()\">Back</button>\n    </form>\n   </div>\n</div>\n ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { EmployeeService } from 'src/app/Service/employee.service';\n@Component({\n  selector: 'app-add-emp',\n  templateUrl: './add-emp.component.html',\n  styleUrls: ['./add-emp.component.css']\n})\nexport class AddEmpComponent implements OnInit  {\n  userId !:string;\n  UserForm!:FormGroup;\n  isUpdate :boolean= false;\n  constructor( private fb: FormBuilder,private serv:EmployeeService,private route: Router,private routes: ActivatedRoute){\n\n  }\n  ngOnInit(): void {\n    this.formLoad();\nthis.routes.queryParams.subscribe((params:any)=>{\n  this.userId = params.id\n  debugger\n});\n\n\nif(this.userId){\n  this.isUpdate = true\n  this.getUserbyId(this.userId)\n\n}\n  }\n  \n  onSubmit(){\nconst data = {\n  empId:0,\n  name: this.UserForm.value.Name,\n  phoneNumber: this.UserForm.value.PhoneNumber,\n  email: this.UserForm.value.Email,\n  department: this.UserForm.value.Department,\n  designation: this.UserForm.value.Designation,\n};\nconsole.log(data);\n\nthis.serv.createEmployee(data).subscribe((res:any)=>{\n  console.log(res);\n  if(res.data==true){\n    this.route.navigate(['']);\n  }\n})\n  }\n  formLoad(){\n    return this.UserForm=this.fb.group({\n      Name:[''],\n      PhoneNumber:[''],\n      Email:[''],\n      Department:[''],\n      Designation:['']\n})\n  }\n  onBack(){\n    this.route.navigate(['']);\n  }\n  getUserbyId(id:string){\n    debugger\n    this.serv.employeeDetailById(Number(id)).subscribe((res:any)=>{\n      if(res){\n        res.data\n        this.UserForm.patchValue({\n          Name:res.data.name,\n          PhoneNumber:res.data.phoneNumber,\n          Email:res.data.email,\n          Department:res.data.department,\n          Designation:res.data.designation\n        })\n      }\n      debugger\n      console.log(res);\n   \n    })\n\n  }\n  update(){\n    const userData = {\n      empId:0,\n      name: this.UserForm.value.Name,\n      phoneNumber: this.UserForm.value.PhoneNumber,\n      email: this.UserForm.value.Email,\n      department: this.UserForm.value.Department,\n      designation: this.UserForm.value.Designation,\n    };\n    this.serv.updateEmployee(userData)\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}